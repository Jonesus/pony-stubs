name: Continuous Delivery
on:
  push:
    branches:
      - main

jobs:
  code-quality:
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    uses: jonesus/pony-stubs/.github/workflows/lint-and-typecheck.yml@main

  bump-version:
    name: "Bump version and create changelog with commitizen"
    needs: code-quality
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    outputs:
      bump_commit_sha: ${{ steps.sha.outputs.SHA}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: "${{ secrets.GITHUB_TOKEN }}"

      - id: cz
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          changelog_increment_filename: body.md

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: "body.md"
          tag_name: ${{ env.REVISION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: sha
        run: |
          new_commit_sha=$(git rev-parse HEAD)
          echo $new_commit_sha
          echo "::set-output name=SHA::$new_commit_sha"

  publish:
    name: "Publish new version"
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.bump-version.outputs.bump_commit_sha }}
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: 1.1.13

      - name: Install dependencies
        run: poetry install --no-dev

      - name: Build package
        run: poetry build

      - name: Publish to PyPi
        run: poetry publish -u __token__ -p ${{ secrets.PYPI_TOKEN }}
